---
import { getAllCountries, getCountryInfo } from "@api/countries";
import { getObjectEntries } from "../../../utils";
import Layout from "@layouts/Layout.astro";

export async function getStaticPaths() {
    const countries = await getAllCountries();

    return countries.map((country) => {
        return {
            params: { slug: country.name },
        };
    });
}

const { slug } = Astro.params;
const country = await getCountryInfo(slug);
---

<Layout title={`REST Countries - ${slug}`}>
    <div class="container">
        <button class="back-btn" onclick="history.back()">back</button>
        <div class="flex">
            <div
                class="flag-holder"
                transition:name={`${country.name?.common} flag`}
            >
                <img src={country.flags.svg} alt="" />
            </div>
            <article>
                <h1>{country.name?.common}</h1>
                <div class="flex-list">
                    <ul>
                        <li class="list">
                            Native name
                            <span>{country.name?.common}</span>
                        </li>
                        <li>
                            Population:
                            <span>{country.population}</span>
                        </li>
                        <li>
                            Region: <span>{country.region}</span>
                        </li>
                        <li>
                            Sub Region: <span>{country.subregion}</span>
                        </li>
                        <li>
                            Capital: <span>{country.capital}</span>
                        </li>
                    </ul>
                    <ul>
                        <li>
                            Top Level Domain: <span>{country.tld}</span>
                        </li>
                        <li class="list">
                            Currencies:
                            {
                                getObjectEntries(country.currencies).map(
                                    (curr) => <span>{curr.value?.name}</span>
                                )
                            }
                        </li>
                        <li class="list">
                            Languages:
                            {
                                getObjectEntries(country.languages).map(
                                    (lang) => <span>{lang.value}</span>
                                )
                            }
                        </li>
                    </ul>
                </div>
            </article>
        </div>
    </div>
</Layout>

<style is:global>
    .container {
        padding-inline: 6vw;
        padding-block: max(5vw, 2.5rem);
        color: var(--color-text);
    }

    .container .back-btn {
        text-transform: capitalize;
        background-color: var(--color-elements);
        padding: 0.4em 1.8em;
        border-radius: 0.2em;
        display: inline-flex;
        align-items: center;
        gap: 0.5em;
        margin-bottom: 3.5rem;
        cursor: pointer;
        box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;
    }

    .container ion-icon {
        transition: 300ms;
    }

    .container .back-btn:hover ion-icon {
        transform: translateX(-3px);
    }

    .flex {
        color: var(--color-text);
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-wrap: wrap;
        gap: 8rem;
    }

    @media (max-width: 760px) {
        .flex {
            gap: 2.5rem;
        }
    }

    .flex .flag-holder {
        width: min(430px, 90vw);
        flex-grow: 1;
    }

    .flex .flag-holder img {
        width: 100%;
    }

    .flex article {
        width: 40%;
        flex-grow: 1;
    }

    .flex article > h1 {
        font-size: clamp(1.2rem, 0.6vw + 0.8rem, 1.3rem);
        margin-bottom: 1.5rem;
    }

    .flex-list {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
        gap: 2rem;
    }
    .flex-list li {
        margin-bottom: 0.5rem;
        font-size: clamp(0.8rem, 0.5vw + 0.5rem, 1rem);
        font-weight: 600;
    }

    .flex-list li span {
        font-weight: 300;
    }

    .flex-links {
        display: flex;
        align-items: center;
        gap: 1rem;
        flex-wrap: wrap;
        margin-top: 3rem;
    }

    .flex-links p {
        font-weight: 600;
    }

    .flex-links .links {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .flex-links a {
        border: none;
        cursor: pointer;
        background-color: var(--color-elements);
        padding: 0.2em 0.6em;
        min-width: 5.5rem;
        font-weight: 300;
        text-align: center;
        border-radius: 0.2em;
        box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;
        transition: 30ms;
        transform-origin: left;
    }

    .list span::after {
        content: ", ";
    }

    .list span:last-child::after {
        content: ".";
    }
</style>
